//------------------------------------------------------------------------------
// <auto-generated>
//     ?????????
//     ?????:4.0.30319.42000
//
//     ???????????????????????
//     ????????????????
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Windows;
using System.Windows.Media;
using System.Windows.Media.Effects;
using System.Windows.Media.Media3D;


namespace WpfDesignAndAnimationLab.Effects {
	
	public class SmoothThresholdEffect : ShaderEffect {
		public static readonly DependencyProperty InputProperty = ShaderEffect.RegisterPixelShaderSamplerProperty("Input", typeof(SmoothThresholdEffect), 0);
		public static readonly DependencyProperty UpperThreshProperty = DependencyProperty.Register("UpperThresh", typeof(double), typeof(SmoothThresholdEffect), new UIPropertyMetadata(((double)(0.52D)), PixelShaderConstantCallback(0)));
		public static readonly DependencyProperty LowerThreshProperty = DependencyProperty.Register("LowerThresh", typeof(double), typeof(SmoothThresholdEffect), new UIPropertyMetadata(((double)(0.5D)), PixelShaderConstantCallback(1)));
		public SmoothThresholdEffect() {
			PixelShader pixelShader = new PixelShader();
			pixelShader.UriSource = new Uri("/WpfDesignAndAnimationLab.Effects;component/Shaders/SmoothThresholdEffect.ps", UriKind.Relative);
			this.PixelShader = pixelShader;

			this.UpdateShaderValue(InputProperty);
			this.UpdateShaderValue(UpperThreshProperty);
			this.UpdateShaderValue(LowerThreshProperty);
		}
		public Brush Input {
			get {
				return ((Brush)(this.GetValue(InputProperty)));
			}
			set {
				this.SetValue(InputProperty, value);
			}
		}
		public double UpperThresh {
			get {
				return ((double)(this.GetValue(UpperThreshProperty)));
			}
			set {
				this.SetValue(UpperThreshProperty, value);
			}
		}
		public double LowerThresh {
			get {
				return ((double)(this.GetValue(LowerThreshProperty)));
			}
			set {
				this.SetValue(LowerThreshProperty, value);
			}
		}
	}
}
